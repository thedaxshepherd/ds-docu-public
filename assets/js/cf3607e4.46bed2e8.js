"use strict";(self.webpackChunkdocu=self.webpackChunkdocu||[]).push([[6443],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>p});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=l(n),p=a,h=m["".concat(u,".").concat(p)]||m[p]||d[p]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4764:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={title:"Defining Measures in DAX Studio",date:new Date("2022-09-30T00:00:00.000Z"),draft:!1,comments:!0,tags:["dax","daxstudio"],slug:"defining-measures-in-dax-studio",summary:"Some common issues that I run into when defining measures in DAX Studio."},i=void 0,s={permalink:"/ds-docu/defining-measures-in-dax-studio",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/Adding-Measures-DAX-Studio/index.md",source:"@site/blog/Adding-Measures-DAX-Studio/index.md",title:"Defining Measures in DAX Studio",description:"After a period of not defining measures in DAX Studio, I seem to make the same two mistakes.",date:"2022-09-30T00:00:00.000Z",formattedDate:"September 30, 2022",tags:[{label:"dax",permalink:"/ds-docu/tags/dax"},{label:"daxstudio",permalink:"/ds-docu/tags/daxstudio"}],readingTime:2.34,hasTruncateMarker:!0,authors:[],frontMatter:{title:"Defining Measures in DAX Studio",date:"2022-09-30T00:00:00.000Z",draft:!1,comments:!0,tags:["dax","daxstudio"],slug:"defining-measures-in-dax-studio",summary:"Some common issues that I run into when defining measures in DAX Studio."},prevItem:{title:"Using subtree force",permalink:"/ds-docu/git-subtree-force"},nextItem:{title:"First Blog Post",permalink:"/ds-docu/first-blog-post"}},u={authorsImageUrls:[]},l=[{value:"Test",id:"test",level:2},{value:"Solution",id:"solution",level:2},{value:"Summary",id:"summary",level:2}],c={toc:l};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"After a period of not defining measures in DAX Studio, I seem to make the same two mistakes.\nThe first error occurs when I try to run the following code to define a measure in a query:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dax"},"DEFINE MEASURE [UnitPrice] = SUM('Sales'[Unit Price])\n    EVALUATE\n        CALCULATE([UnitPrice])\n")),(0,a.kt)("h1",{id:"error"},"Error"),(0,a.kt)("p",null,"This generates the following error:\nThe syntax for '=' is incorrect."),(0,a.kt)("p",null,'The issue lies in not including the table name before the measure name. This esentially indicates where the measure "lives" in the model and is needed for the full definition of the measure. '),(0,a.kt)("p",null,"So I am going to use the Sales table for the home of the measure. This does not impact how the measure works. I could have just as well chosen the Product table and the result would be the same. But if this were Power BI or Analysis Services where you place the measures is more about organization and making the user experience more intuitive."),(0,a.kt)("p",null,"Here I have added the Sales table to the name of the measure."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dax"},"DEFINE MEASURE 'Sales'[UnitPrice] = SUM('Sales'[Unit Price])\n")),(0,a.kt)("p",null,"More info on defining a measure can be found here: ",(0,a.kt)("a",{parentName:"p",href:"https://dax.guide/st/measure/"},"https://dax.guide/st/measure/")),(0,a.kt)("h2",{id:"test"},"Test"),(0,a.kt)("p",null,"But running the full version of the code still generates an error:\nQuery (1, 1) The expression specified in the query is not a valid table expression."),(0,a.kt)("p",null,"Especially when you are learning to use DAX Studio you may run into this error a lot. What it is telling us is that the code we are running is not returning a table expression. We know that when we query using DAX we usually either return a scalar or a table value. If you are not sure what functions return which you can use a site like ",(0,a.kt)("a",{parentName:"p",href:"https://dax.guide/"},"https://dax.guide/")," and it will show the input as well as the return type. Calculate returns a scalar whereas CalculateTable returns a Table. "),(0,a.kt)("p",null,"One trick to turn this Scalar into a table is to use the ROW function. It takes the name of the new column and the expression for the column and returns a table with one or more columns:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dax"},"DEFINE MEASURE 'Sales'[UnitPrice] = SUM('Sales'[Unit Price])\nEVALUATE\nROW(\"Unit Price\", CALCULATE([UnitPrice]))\n")),(0,a.kt)("h2",{id:"solution"},"Solution"),(0,a.kt)("p",null,"This runs successfully"),(0,a.kt)("p",null,'{{< figure src="images/DAX_Studio_Result.png" width="150" alt="Result" title="Result" >}}'),(0,a.kt)("p",null,"With the ROW function we can give the column a name. We can also repeat this for as many columns as we need."),(0,a.kt)("p",null,"Another option is we can use the table constructor syntax to create a table."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dax"},"{\n  (CALCULATE([UnitPrice]))\n}\n")),(0,a.kt)("h2",{id:"summary"},"Summary"),(0,a.kt)("p",null,"But this does not allow us to name the column. But we can add multiple rows to each column if we want. "),(0,a.kt)("p",null,"These two issues are ones that I encountered a lot when starting to use DAX Studio. Mostly due to the time period between when I would be using DAX Studio."))}d.isMDXComponent=!0}}]);